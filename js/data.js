import {getPositiveNumber, getRandomArrayElement} from './util.js';

/* 4.9. task

В файле main.js на основе написанных по заданию ранее вспомогательных функций напишите необходимые функции для создания массива из 25 сгенерированных объектов. Каждый объект массива — описание фотографии, опубликованной пользователем.

Структура каждого объекта должна быть следующей:

id, число — идентификатор описания. Это число от 1 до 25. Идентификаторы не должны повторяться.

url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.

description, строка — описание фотографии. Описание придумайте самостоятельно.

likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.

comments, массив объектов — список комментариев, оставленных другими пользователями к этой фотографии. Количество комментариев к каждой фотографии вы определяете на своё усмотрение. Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:

{
  id: 135,
  avatar: 'img/avatar-6.svg',
  message: 'В целом всё неплохо. Но не всё.',
  name: 'Артём',
}
У каждого комментария есть идентификатор — id — случайное число. Идентификаторы не должны повторяться.

Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.

Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:

Всё отлично!
В целом всё неплохо. Но не всё.
Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!
Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name.
*/

// количество необходимых объектов
const FAVORITE_OBJECTS = 25;

// список рандомных описаний фото
const DESCRIPTIONS = [
  'Летний чил на югах. #тай #отдых #лето #чил #travel #travelgram #summergram #chill',
  'Тестим новую камеру! #camera #test #new #newcameratest #pic #photo #instaphoto',
  'Затусили с друзьями на море #laptevsea #north #northeastpassage',
  'Как же круто тут кормят #food #foodgram #instafood #delicious #yummy',
  'Отдыхаем... #chill #relax #group #photo',
  'Цените каждое мгновенье. Цените тех, кто рядом с вами и отгоняйте все сомненья. Не обижайте всех словами......',
  'Вот это тачка! #wow #car #carwow #drive',
  '#fun #party #cool #young',
  'Господи, это такая милота, я сейчас умру от нежности, у меня закшалил мимимиметр',
  'Хорошо, когда в жизни есть #друзья, которые вместе со мной могут зайти в #барнарубинштейна и бахнуть #пивка',
  'Норм',
];

// список рандомных имен комментаторов
const NAMES = ['Rozali', 'Rozandra', 'Rora', 'Roza', 'Rozmarin', 'Roberto',];

const MAX_COMMENTS_COUNT = 15;
const MAX_LIKES_COUNT = 300;

// список рандомных комментариев
const MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
];


// функция для генерации одного комментария
const createComment = () => {
  //уникальный id пока не знаю как задать для каждого комментария
  const unicId = getPositiveNumber(1, 200);
  //в ассортименте только 6 аватаров
  const n = getPositiveNumber(1, 6);
  return {id: unicId, avatar: `img/avatar-${n}.svg`, message: getRandomArrayElement(MESSAGES), name: getRandomArrayElement(NAMES), };
};

// функция для генерации массива комментов
const createCommentList = () => {
  const count = getPositiveNumber(0, MAX_COMMENTS_COUNT);
  const comments = [];
  for (let i = 0; i < count; i++) {
    comments[i] = createComment();
  }
  return comments;
};

// функция для создания фото, принимает число n из цикла, для записи уникальных id и адресов
const createPicture = function (n) {
  return {
    id: n,
    url: `photos/${n+1}.jpg`,
    description: getRandomArrayElement(DESCRIPTIONS),
    likes: getPositiveNumber(15, MAX_LIKES_COUNT),
    comments: createCommentList(),
  };
};

// функция для создания массива фото
const getPictures = () => {
  const pictures = [];
  for(let i = 0; i < FAVORITE_OBJECTS; i++) {
    const picture = createPicture(i);
    pictures.push(picture);
  }
  return pictures;
};


export {getPictures};
