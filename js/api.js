/*task 11.13

Задача
Отказаться от использования временных данных для разработки и создать модуль для работы с сервером.

Создайте новый модуль и опишите в нём функции взаимодействия c удалённым сервером с помощью fetch для получения и отправки данных. Актуальный адрес сервера вы найдёте в техзадании.

Подключите модуль в проект.

Получение данных

Доработайте модуль для отрисовки фотографий так, чтобы в качестве данных использовались не случайно сгенерированные объекты, а те данные, которые вы загрузите с удалённого сервера.

Добавьте обработку возможных ошибок при загрузке.

Отправка данных
Сейчас наша форма работает просто: при нажатии на кнопку «Опубликовать» происходит перенаправление на адрес, указанный в атрибуте action. Это не совсем удобно, и если оставить всё как есть, пользователю придётся самостоятельно возвращаться назад. Стоит ли говорить, что это далеко не оптимальное решение. Поэтому данные из формы мы будем передавать с помощью AJAX.

Кекстаграм
Кексобукинг
Добавьте обработчик отправки формы, если ещё этого не сделали, который бы отменял действие формы по умолчанию и отправлял данные формы посредством fetch на сервер.

Реализуйте возвращение формы в исходное состояние при успешной отправке, а также показ сообщения пользователю.

Если при отправке данных произошла ошибка запроса, покажите соответствующее сообщение.

Доработайте обработчик закрытия формы, чтобы кроме закрытия формы он сбрасывал введённые пользователем данные и возвращал форму в исходное состояние. Аналогичным образом обработайте нажатие на кнопку сброса.
*/


const getData = (onSuccess, onError) => {
  fetch('https://25.javascript.pages.academy/kekstagram/data')
    .then((response) => response.json())
    .then((pictures) => {
      onSuccess(pictures);
    })
    .catch(() => {
      onError();
    });
};

const sendData = (onSuccess, onFail, body) => {
  fetch(
    'https://25.javascript.pages.academy/kekstagram',
    {
      method: 'POST',
      body,
    },
  )
    .then((response) => {
      if (response.ok) {
        onSuccess();
      } else {
        onFail();
      }
    })
    .catch(() => {
      onFail();
    });
};


export {getData, sendData};
